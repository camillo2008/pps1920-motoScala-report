# This is a basic workflow to help you get started with Actions
name: Latek Build
on:
  push:
    branches: [ master ]
    tags:
      - '**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_latek:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Git repo
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2
        
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v2
        with:
          root_file: main.tex
          #pre_compile: "tlmgr update --self --all"
          args: "-pdf -file-line-error -halt-on-error -interaction=nonstopmode -logfilewarninglist -Werror"
          post_compile: "latexmk -c"
      
      - name: Split log
        if: failure()
        shell: bash
        run: cat main.log | grep -n -E 'LaTeX Error|LaTeX Warning|Undefined' > small.log
      
      - name: Upload Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: Logs
          path: |
            main.log
            small.log
            
      - name: Print small log
        if: failure()
        shell: bash
        run: cat small.log >&2
        
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: main.pdf
          
      - name: Extract relese message if present
        shell: bash
        id: relese_msg
        run: |
          echo "::set-output name=RELESE_NAME::$(echo ${{github.event.head_commit.message}} | grep -o -P '(?<=-TAG{).*(?=})')"
      - name: Create relese if tag commit contain a tag message
        id: create_release
        if: ${{ steps.relese_msg.outputs.RELESE_NAME != '' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ steps.relese_msg.outputs.RELESE_NAME }}
          release_name: Release ${{ steps.relese_msg.outputs.RELESE_NAME }}
          draft: false
          prerelease: false

      - name: Build project
        run: |
          zip --junk-paths my-artifact main.pdf

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./my-artifact.zip
          asset_name: Relese.zip
          asset_content_type: application/zip
